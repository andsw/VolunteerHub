package ca.ontario.conestoga.volunteerhub.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ParticipationRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public ParticipationRecordExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andActivityidIsNull() {
            addCriterion("activityId is null");
            return (Criteria) this;
        }

        public Criteria andActivityidIsNotNull() {
            addCriterion("activityId is not null");
            return (Criteria) this;
        }

        public Criteria andActivityidEqualTo(Integer value) {
            addCriterion("activityId =", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidNotEqualTo(Integer value) {
            addCriterion("activityId <>", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidGreaterThan(Integer value) {
            addCriterion("activityId >", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidGreaterThanOrEqualTo(Integer value) {
            addCriterion("activityId >=", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidLessThan(Integer value) {
            addCriterion("activityId <", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidLessThanOrEqualTo(Integer value) {
            addCriterion("activityId <=", value, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidIn(List<Integer> values) {
            addCriterion("activityId in", values, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidNotIn(List<Integer> values) {
            addCriterion("activityId not in", values, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidBetween(Integer value1, Integer value2) {
            addCriterion("activityId between", value1, value2, "activityid");
            return (Criteria) this;
        }

        public Criteria andActivityidNotBetween(Integer value1, Integer value2) {
            addCriterion("activityId not between", value1, value2, "activityid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridIsNull() {
            addCriterion("volunteerId is null");
            return (Criteria) this;
        }

        public Criteria andVolunteeridIsNotNull() {
            addCriterion("volunteerId is not null");
            return (Criteria) this;
        }

        public Criteria andVolunteeridEqualTo(Integer value) {
            addCriterion("volunteerId =", value, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridNotEqualTo(Integer value) {
            addCriterion("volunteerId <>", value, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridGreaterThan(Integer value) {
            addCriterion("volunteerId >", value, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridGreaterThanOrEqualTo(Integer value) {
            addCriterion("volunteerId >=", value, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridLessThan(Integer value) {
            addCriterion("volunteerId <", value, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridLessThanOrEqualTo(Integer value) {
            addCriterion("volunteerId <=", value, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridIn(List<Integer> values) {
            addCriterion("volunteerId in", values, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridNotIn(List<Integer> values) {
            addCriterion("volunteerId not in", values, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridBetween(Integer value1, Integer value2) {
            addCriterion("volunteerId between", value1, value2, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andVolunteeridNotBetween(Integer value1, Integer value2) {
            addCriterion("volunteerId not between", value1, value2, "volunteerid");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeIsNull() {
            addCriterion("participationTime is null");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeIsNotNull() {
            addCriterion("participationTime is not null");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeEqualTo(Date value) {
            addCriterion("participationTime =", value, "participationtime");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeNotEqualTo(Date value) {
            addCriterion("participationTime <>", value, "participationtime");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeGreaterThan(Date value) {
            addCriterion("participationTime >", value, "participationtime");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("participationTime >=", value, "participationtime");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeLessThan(Date value) {
            addCriterion("participationTime <", value, "participationtime");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeLessThanOrEqualTo(Date value) {
            addCriterion("participationTime <=", value, "participationtime");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeIn(List<Date> values) {
            addCriterion("participationTime in", values, "participationtime");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeNotIn(List<Date> values) {
            addCriterion("participationTime not in", values, "participationtime");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeBetween(Date value1, Date value2) {
            addCriterion("participationTime between", value1, value2, "participationtime");
            return (Criteria) this;
        }

        public Criteria andParticipationtimeNotBetween(Date value1, Date value2) {
            addCriterion("participationTime not between", value1, value2, "participationtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table participation_record
     *
     * @mbg.generated do_not_delete_during_merge Fri Jun 14 13:55:17 EDT 2024
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table participation_record
     *
     * @mbg.generated Fri Jun 14 13:55:17 EDT 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}